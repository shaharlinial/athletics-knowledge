Text - Among the [countries], which country secured the most gold medals in the [year] Summer Olympics?

Query -

SELECT
	t.NOC AS country,
    COUNT(*) AS c
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
WHERE
    o.season = 'Summer' AND
    ae.medal = 'Gold' AND
    (
        t.NOC IN (
          SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )  AND

    o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' and user_id = 1), 1000
    ) AND
    o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' and user_id = 1), 3000
    ) AND
    (
        e.sport_id IN (
          SELECT preference_value FROM sports_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 1)
    )

GROUP BY
    t.NOC
ORDER BY
    c DESC;


Text - In the [year] Winter Olympics, which athlete from [country] won the most medals across all sports?
Query -
SELECT
    a.name,
    COUNT(*) AS total_medals,
    MAX(t.NOC) AS majority_NOC
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    o.season = 'Winter'
    AND ae.medal != 'NA'
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )
    AND o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' AND user_id = 1), 1000
    )
    AND o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' AND user_id = 1), 3000
    )
GROUP BY
    a.name
ORDER BY
    total_medals DESC;



Text - Among the [countries] in the [year] Summer Olympics, which nation topped the medal tally in [sport]?
Comment - year needs to be taken from preferences
Query -
SELECT
    t.NOC AS country,
    COUNT(*) AS total_medals
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
WHERE
    o.year = '2000' AND
    o.season = 'Summer' AND
    ae.medal != 'NA'  AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )
    AND o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' AND user_id = 1), 1000
    )
    AND o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' AND user_id = 1), 3000
    )
GROUP BY
    t.NOC
ORDER BY
    total_medals DESC;




Text - Which [country] swimmer won the most gold medals in the [year] Olympics?
Query -
SELECT
    a.name,
    s.name,
    COUNT(*) AS gold_medals
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
INNER JOIN
	sports AS s ON s.sport_id = e.sport_id
WHERE
    ae.medal = 'Gold' AND
    s.name = 'Swimming'
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )
    AND o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' AND user_id = 1), 1000
    )
    AND o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' AND user_id = 1), 3000
    )
GROUP BY
    a.name
ORDER BY
    gold_medals DESC;




Text - In which year [athlete] won [medal] medal during the [season] Olympics?
Query -
SELECT
    a.name,
    o.season,
    o.year
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.medal = 'Gold'
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )
    AND o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' AND user_id = 1), 1000
    )
    AND o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' AND user_id = 1), 3000
    )
GROUP BY
    a.name,
    o.season,
    o.year
ORDER BY
    o.year DESC;



Which athlete won the most medals for their [country]?
Query -
SELECT
    athlete_name,
    country,
    total_medals
FROM (
    SELECT
        athlete_name,
        country,
        total_medals,
        (@row_number := CASE WHEN @current_country = country THEN @row_number + 1 ELSE 1 END) AS rank,
        @current_country := country
    FROM (
        SELECT
            a.name AS athlete_name,
            t.NOC AS country,
            COUNT(*) AS total_medals
        FROM
            athlete_events AS ae
        INNER JOIN
            teams AS t ON t.team_id = ae.team_id
        INNER JOIN
            events AS e ON e.event_id = ae.event_id
        INNER JOIN
            olympics AS o ON o.olympics_id = e.olympics_id
        INNER JOIN
            athletes AS a ON a.athlete_id = ae.athlete_id
        WHERE
            ae.medal != 'NA'
            AND (
                t.NOC IN (
                    SELECT preference_value FROM country_preferences WHERE user_id = 1
                )
                OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
            )
            AND o.year >= COALESCE(
                (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' AND user_id = 1), 1000
            )
            AND o.year <= COALESCE(
                (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' AND user_id = 1), 3000
            )
        GROUP BY
            a.name,
            t.NOC
        ORDER BY
            country,
            total_medals DESC
    ) AS medal_counts,
    (SELECT @row_number := 0, @current_country := '') AS vars
) AS ranked
WHERE
    rank = 1;



Among the [countries], which country secured the least number of medals in the [year] Olympics?
Query -
SELECT
	t.NOC AS country,
    COUNT(*) AS c
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
WHERE
    ae.medal != 'NA' AND
    (
        t.NOC IN (
          SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )  AND

    o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'start_year' and user_id = 1), 1000
    ) AND
    o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 'end_year' and user_id = 1), 3000
    ) AND
    (
        e.sport_id IN (
          SELECT preference_value FROM sports_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 1)
    )

GROUP BY
    t.NOC
ORDER BY
    c DESC;


Which of the [countries] have the lowest ratio winter to summer medals?
Query -
SELECT
    t.NOC AS country,
    SUM(CASE WHEN o.season = 'Winter' THEN 1 ELSE 0 END) AS winter_medals,
    SUM(CASE WHEN o.season = 'Summer' THEN 1 ELSE 0 END) AS summer_medals,
    ROUND(
        SUM(CASE WHEN o.season = 'Winter' THEN 1 ELSE 0 END) /
        SUM(CASE WHEN o.season = 'Summer' THEN 1 ELSE 0 END),
        2
    ) AS winter_to_summer_ratio
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.medal != 'NA' AND
    (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE  user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )  AND
    o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.start_year' AND user_id = 2), 1000
    ) AND
    o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.end_year' AND user_id = 2), 3000
    ) AND
    (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE  user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 2)
    )
GROUP BY
    t.NOC
HAVING
    SUM(CASE WHEN o.season = 'Summer' THEN 1 ELSE 0 END) > 0
    AND SUM(CASE WHEN o.season = 'Winter' THEN 1 ELSE 0 END) > 0 -- Remove countries with no summer or winter medals
ORDER BY
    winter_to_summer_ratio ASC;




Which of the countries holds the longest gold streak, securing at least one gold medal each year?
Query -
SELECT
    country,
    MIN(start_year) AS start_year,
    MAX(end_year) AS end_year,
    MAX(gold_streak_length) AS gold_streak_length
FROM (
    SELECT
        t.NOC AS country,
        MIN(o.year) AS start_year,
        MAX(o.year) AS end_year,
        MAX(o.year) - MIN(o.year) + 1 AS gold_streak_length -- Calculate the streak length as the difference between the max and min years, plus 1
    FROM
        athlete_events AS ae
    INNER JOIN
        teams AS t ON t.team_id = ae.team_id
    INNER JOIN
        events AS e ON e.event_id = ae.event_id
    INNER JOIN
        olympics AS o ON o.olympics_id = e.olympics_id
    WHERE
        ae.medal = 'Gold' AND
    (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE  user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )  AND
    o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.start_year' AND user_id = 1), 1000
    ) AND
    o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.end_year' AND user_id = 1), 3000
    )
    GROUP BY
        t.NOC, o.year - (SELECT MIN(o2.year) FROM olympics AS o2 WHERE o2.olympics_id = o.olympics_id)
) AS gold_streaks
GROUP BY
    country
ORDER BY
    gold_streak_length DESC;



Which [country] athlete secured the most gold medal but only silver medal in the following Olympics in [year]?
Query -
SELECT
    a.name,
    COUNT(*) AS gold_and_silver_next_olympics
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.medal = 'Gold'
    AND EXISTS (
        SELECT 1
        FROM athlete_events AS ae2
        JOIN events AS e2 ON ae2.event_id = e2.event_id
        JOIN olympics AS o2 ON e2.olympics_id = o2.olympics_id
        WHERE ae2.athlete_id = ae.athlete_id
        AND ae2.medal = 'Silver'
        AND o2.year = o.year + 4
    )
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )
    AND o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.start_year' AND user_id = 2), 1000
    )
    AND o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.end_year' AND user_id = 2), 3000
    )
GROUP BY
    a.name
ORDER BY
    gold_and_silver_next_olympics DESC;




Among the [countries] participating in the [year] Olympics, which nation had the highest number of female gold medallists?
Query -
SELECT
    t.NOC AS country,
    COUNT(*) AS female_gold_medallists
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    a.sex = 'F' AND
    ae.medal = 'Gold' AND
    (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 1)
    )  AND
    o.year >= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.start_year' AND user_id = 1), 1000
    ) AND
    o.year <= COALESCE(
        (SELECT preference_value FROM year_preferences WHERE preference_param = 't.end_year' AND user_id = 1), 3000
    ) AND
    (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE user_id = 1
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 1)
    )
GROUP BY
    t.NOC
ORDER BY
    female_gold_medallists DESC;



Among the [countries] participating in the [year] Olympics, which nation had the highest number of female participations?
Query -

SELECT
    t.NOC AS country,
    COUNT(*) AS female_participations
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    a.sex = 'F'
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )
    AND (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 2)
    )
GROUP BY
    t.NOC
ORDER BY
    female_participations DESC;




Who was the shortest/highest [country] athlete, standing at [height] cm, to participate in the [year] Olympics?
Query -

SELECT
    a.name AS athlete_name,
    t.NOC AS country,
    MAX(ae.height) AS athlete_height
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.height IS NOT NULL
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )
    AND (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 2)
    )
GROUP BY
    a.name, t.NOC
ORDER BY
    MAX(ae.height) ASC;



Who was the heaviest/lightest [country] athlete, standing at [height] kg, to participate in the [year] Olympics?
Query -

SELECT
    a.name AS athlete_name,
    t.NOC AS country,
    MAX(ae.weight) AS athlete_weight
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.weight IS NOT NULL
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )
    AND (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 2)
    )
GROUP BY
    a.name, t.NOC
ORDER BY
    MAX(ae.weight) DESC;




Who was the oldest/youngest [country] athlete, standing at [age], to participate in the [year] Olympics?
Query -
SELECT
    a.name AS athlete_name,
    t.NOC AS country,
    MIN(ae.age) AS athlete_age
FROM
    athlete_events AS ae
INNER JOIN
    teams AS t ON t.team_id = ae.team_id
INNER JOIN
    events AS e ON e.event_id = ae.event_id
INNER JOIN
    olympics AS o ON o.olympics_id = e.olympics_id
INNER JOIN
    athletes AS a ON a.athlete_id = ae.athlete_id
WHERE
    ae.age IS NOT NULL
    AND (
        t.NOC IN (
            SELECT preference_value FROM country_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM country_preferences WHERE user_id = 2)
    )
    AND (
        e.sport_id IN (
            SELECT preference_value FROM sports_preferences WHERE user_id = 2
        )
        OR NOT EXISTS (SELECT 1 FROM sports_preferences WHERE user_id = 2)
    )
GROUP BY
    a.name, t.NOC
ORDER BY
    MIN(ae.age) ASC;



